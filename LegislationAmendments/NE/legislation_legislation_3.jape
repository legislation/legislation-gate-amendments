/*
(c) Crown copyright

You may use and re-use the code in this repository free of charge under the terms of the Open Government Licence

http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2

*/
/*  
* Filename: 	legislation_legislation_3.jape
* Author:	Paul Appleby
* Description:	Extract other -primary- legislation references from text
* Date created:	06/04/2011
* This version:	0.5
*
* Change history
* ==========================================================================
* Date		Version		Author		Description
* ==========================================================================
* 
*/

Phase:	Legislation3
Input:  Lookup Token Legislation TempActContainer // LegText
Options: control = appelt

Macro: LEGISLATIONTERMFIRST
(
	{!Legislation, Token.orth == upperInitial, Token.category =~ "^((NN)|(DT))", !Token.kind == "punctuation", Token.length > 1} |
	{!Legislation, Token.orth == allCaps, Token.category =~ "\\ANN", !Token.kind == "punctuation", Token.length > 1}
)

Macro: LEGISLATIONTERM
(
    {Token.orth != lowercase, Token.category =~ "\\ANN", !Token.kind == "punctuation", !Lookup.minorType == facility, Token.length > 1} |
	//{Token.orth == upperInitial, Token.category == JJ, !Lookup.minorType == facility, Token.length > 1} |
	{Token.orth == "upperInitial",!Lookup.minorType == facility, Token.length > 1} |
	{Token.category == "CD", Token.length == 4, Token.kind == number} |
	{Token.category == "CC"} |
	{Token.category == "IN"} |
	{Token.category == "TO"} |
	{Token.root == "of"} |	
	{Token.orth == allCaps, Token.category =~ "\\ANN", !Token.kind == "punctuation", !Lookup.minorType == facility, Token.length > 1} |
	(
		{Token.string == "("}
		(
			{Token.string != ")", Token.string != "\u201C", Token.string != "\u201D"}
		)[1,3]
		{Token.string == ")"}
	)			
)

Rule: AvoidLegislationReference
Priority: 10
(
	{Legislation} 
	//| {LegText, !TempActContainer}
)
-->{}

/* Other references to (any kind of) legislation */
Rule: LegislationReference
(
	(LEGISLATIONTERMFIRST)
	(LEGISLATIONTERM)[1,12]
	//{Token.string ==~ "(Act)|(Order)|(Regulations)|(Rules)|(Scheme)", !Token within Legislation}
	{Token.string ==~ "(Act)|(Order)|(Regulations)|(Rules)|(Scheme)"}
	(
		{Token.string == "("}
		(
			{Token.string != ")", Token.string != "\u201C", Token.string != "\u201D"}
		)[1,3]
		{Token.string == ")"}
	)?			
	({Token.category == CD, Token.length == 4, Token.kind == number})?
	(
		{Token.string == "("}
		(
			{Token.string != ")", Token.string != "\u201C", Token.string != "\u201D"}
		)[1,3]
		{Token.string == ")"}
	)?			
):legislation
-->
:legislation.Legislation = {rule=NoContext}

