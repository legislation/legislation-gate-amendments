/*
(c) Crown copyright

You may use and re-use the code in this repository free of charge under the terms of the Open Government Licence

http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2

*/
/*
*  
* Filename: 	des_day_resolution.jape
* Author:	Paul Appleby
* Description:	Applies Day and Month information along with context
* Date created:	22/03/2010
* This version:	0.1
* 
* 
* Change history
* ==========================================================================
* Date		Version		Author		Description
* ==========================================================================
*
*/

Phase: DayResolution
Input: Lookup TempDate
Options: control = all

/* This matches against look-ups and then calculate the URI for the concept */


Rule: DayofWeek
(
	{Lookup.majorType == date, Lookup.minorType == dayofweek}
):day
-->
{
	gate.AnnotationSet day = (gate.AnnotationSet)bindings.get("day");
	gate.Annotation dayAnn = (gate.Annotation)day.iterator().next();
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("value", dayAnn.getFeatures().get("day"));
	features.put("rule", "DayOfWeek");
	String days[] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
	
	features.put("context", "http://www.w3.org/TR/owl-time#" +
		days[Integer.parseInt(dayAnn.getFeatures().get("day").toString()) - 1]);
		
	outputAS.add(day.firstNode(), day.lastNode(), "Day", features);
}


Rule: Month
(
	{Lookup.majorType == date, Lookup.minorType == month}
):month
-->
{
	gate.AnnotationSet month = (gate.AnnotationSet)bindings.get("month");
	gate.Annotation monthAnn = (gate.Annotation)month.iterator().next();
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("value", monthAnn.getFeatures().get("month"));
	features.put("rule", "Month");
	String months[] = {"January", "February", "March", "April", "May", "June", "July", "August", "September",
		"October", "November", "December"};
	
	features.put("context", "http://reference.data.gov.uk/def/intervals/" +
		months[Integer.parseInt(monthAnn.getFeatures().get("month").toString()) - 1]);
		
	outputAS.add(month.firstNode(), month.lastNode(), "Month", features);
}

Rule: Date
(
	{TempDate}
):date
-->
{
	gate.AnnotationSet date = (gate.AnnotationSet)bindings.get("date");
	gate.Annotation dateAnn = (gate.Annotation)date.iterator().next();
	gate.FeatureMap features = Factory.newFeatureMap();
	String year = "";
	String month = "";
	String day = "";
	if (dateAnn.getFeatures().get("year") != null) {
		year = dateAnn.getFeatures().get("year").toString();
		features.put("year", year);
	}
	if (dateAnn.getFeatures().get("month") != null) {
		month = dateAnn.getFeatures().get("month").toString();
		features.put("month", month);
	}
	if (dateAnn.getFeatures().get("day") != null) {
		day = dateAnn.getFeatures().get("day").toString();
		if (day.length() == 1) day = "0" + day;
		features.put("day", day);
	}
	features.put("rule", "Date");	
	if (!year.isEmpty() && year.length() == 4 && !month.isEmpty() && !day.isEmpty()) {
		features.put("context", "http://reference.data.gov.uk/id/day/" +
			year + "-" + month + "-" + day);
	}
				
	outputAS.add(date.firstNode(), date.lastNode(), "Date", features);
}
   

